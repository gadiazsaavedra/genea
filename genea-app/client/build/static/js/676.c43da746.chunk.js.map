{"version":3,"file":"static/js/676.c43da746.chunk.js","mappings":"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","sources":["services/api.js","services/personService.js","components/FamilyTree/FamilyTree.js","components/PersonDetail/PersonDetail.js","pages/TreeView/TreeView.js"],"sourcesContent":["import axios from 'axios';\nimport { supabase } from '../config/supabase.config';\n\n// Configuración base de axios\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Crear instancia de axios con configuración base\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para añadir el token de autenticación a las solicitudes\napi.interceptors.request.use(\n  async (config) => {\n    // Obtener la sesión actual de Supabase\n    const { data } = await supabase.auth.getSession();\n    const session = data.session;\n    \n    if (session) {\n      config.headers['Authorization'] = `Bearer ${session.access_token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar errores de respuesta\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Manejar errores de autenticación (401)\n    if (error.response && error.response.status === 401) {\n      // Cerrar sesión en Supabase\n      supabase.auth.signOut();\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;","import api from './api';\nimport { supabase } from '../config/supabase.config';\n\n// Servicio para gestionar personas\nconst personService = {\n  // Obtener todas las personas\n  getAllPersons: async (params = {}) => {\n    try {\n      const response = await api.get('/persons', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Obtener personas de una familia\n  getFamilyPersons: async (familyId, params = {}) => {\n    try {\n      const response = await api.get('/persons', { \n        params: { \n          ...params, \n          familyId \n        } \n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Obtener una persona por ID\n  getPersonById: async (id) => {\n    try {\n      const response = await api.get(`/persons/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Crear una nueva persona\n  createPerson: async (personData) => {\n    try {\n      const response = await api.post('/persons', personData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Actualizar una persona existente\n  updatePerson: async (id, personData) => {\n    try {\n      const response = await api.put(`/persons/${id}`, personData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Eliminar una persona\n  deletePerson: async (id) => {\n    try {\n      const response = await api.delete(`/persons/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Añadir una relación entre personas\n  addRelation: async (relationData) => {\n    try {\n      const response = await api.post('/persons/relation', relationData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Eliminar una relación entre personas\n  removeRelation: async (relationData) => {\n    try {\n      const response = await api.delete('/persons/relation', { data: relationData });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Obtener el árbol genealógico de una persona\n  getPersonTree: async (id, params = {}) => {\n    try {\n      const response = await api.get(`/persons/${id}/tree`, { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  \n  // Buscar personas por nombre\n  searchPersons: async (query, familyId) => {\n    try {\n      const response = await api.get('/persons', { \n        params: { \n          query, \n          familyId \n        } \n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  \n  // Obtener relaciones de una persona\n  getPersonRelationships: async (personId) => {\n    try {\n      const response = await api.get(`/persons/${personId}/relationships`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\nexport default personService;","import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './FamilyTree.css';\n\nconst FamilyTree = ({ data, onPersonClick, viewType = 'horizontal' }) => {\n  const svgRef = useRef();\n  const [selectedNode, setSelectedNode] = useState(null);\n  \n  useEffect(() => {\n    if (!data) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Configuración del árbol\n    const width = 1000;\n    const height = 600;\n    const margin = { top: 40, right: 120, bottom: 40, left: 120 };\n    \n    // Crear jerarquía\n    const root = d3.hierarchy(data);\n    \n    // Definir layout según el tipo de vista\n    let treeLayout;\n    if (viewType === 'vertical') {\n      treeLayout = d3.tree()\n        .size([width - margin.left - margin.right, height - margin.top - margin.bottom]);\n    } else {\n      treeLayout = d3.tree()\n        .size([height - margin.top - margin.bottom, width - margin.right - margin.left]);\n    }\n    \n    // Aplicar layout\n    treeLayout(root);\n    \n    // Crear contenedor con zoom\n    const g = svg.append(\"g\")\n      .attr(\"class\", \"tree-container\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    // Enlaces\n    const linkGenerator = viewType === 'vertical'\n      ? d3.linkVertical()\n          .x(d => d.x)\n          .y(d => d.y)\n      : d3.linkHorizontal()\n          .x(d => d.y)\n          .y(d => d.x);\n    \n    g.selectAll(\".link\")\n      .data(root.links())\n      .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", linkGenerator);\n    \n    // Nodos\n    const node = g.selectAll(\".node\")\n      .data(root.descendants())\n      .enter().append(\"g\")\n      .attr(\"class\", d => \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"))\n      .attr(\"transform\", d => {\n        if (viewType === 'vertical') {\n          return `translate(${d.x},${d.y})`;\n        } else {\n          return `translate(${d.y},${d.x})`;\n        }\n      })\n      .on(\"click\", (event, d) => {\n        // Manejar clic en nodo\n        setSelectedNode(d);\n        if (onPersonClick) {\n          onPersonClick(d.data);\n        }\n      });\n    \n    // Círculos para los nodos\n    node.append(\"circle\")\n      .attr(\"r\", 10)\n      .attr(\"class\", d => selectedNode && d.data._id === selectedNode.data._id ? \"selected\" : \"\");\n    \n    // Texto para los nodos\n    node.append(\"text\")\n      .attr(\"dy\", \".35em\")\n      .attr(\"x\", d => {\n        if (viewType === 'vertical') {\n          return 0;\n        } else {\n          return d.children ? -12 : 12;\n        }\n      })\n      .attr(\"y\", d => {\n        if (viewType === 'vertical') {\n          return d.children ? 20 : -20;\n        } else {\n          return 0;\n        }\n      })\n      .style(\"text-anchor\", d => {\n        if (viewType === 'vertical') {\n          return \"middle\";\n        } else {\n          return d.children ? \"end\" : \"start\";\n        }\n      })\n      .text(d => d.data.fullName || d.data.name);\n    \n    // Zoom y pan\n    const zoom = d3.zoom()\n      .scaleExtent([0.3, 3])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    // Inicializar zoom\n    svg.call(zoom);\n    \n    // Centrar el árbol inicialmente\n    const initialTransform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(0.8);\n    \n    svg.call(zoom.transform, initialTransform);\n    \n    // Añadir gestos táctiles para dispositivos móviles\n    if ('ontouchstart' in window) {\n      svg.on('touchstart', function(event) {\n        event.preventDefault();\n      });\n    }\n    \n  }, [data, onPersonClick, selectedNode, viewType]);\n  \n  return (\n    <div className=\"family-tree-container\">\n      <div className=\"tree-controls\">\n        <button className=\"tree-control-btn\" title=\"Acercar\">\n          <span>+</span>\n        </button>\n        <button className=\"tree-control-btn\" title=\"Alejar\">\n          <span>-</span>\n        </button>\n        <button className=\"tree-control-btn\" title=\"Centrar\">\n          <span>⌂</span>\n        </button>\n      </div>\n      <svg ref={svgRef} width=\"100%\" height=\"600\"></svg>\n    </div>\n  );\n};\n\nexport default FamilyTree;","import React from 'react';\nimport './PersonDetail.css';\n\nconst PersonDetail = ({ person, onClose }) => {\n  if (!person) return null;\n\n  return (\n    <div className=\"person-detail\">\n      <div className=\"person-detail-header\">\n        <h2>{person.fullName}</h2>\n        <button className=\"close-button\" onClick={onClose}>×</button>\n      </div>\n      \n      <div className=\"person-detail-content\">\n        {person.profilePhoto && (\n          <div className=\"person-photo\">\n            <img src={person.profilePhoto} alt={person.fullName} />\n          </div>\n        )}\n        \n        <div className=\"person-info\">\n          <div className=\"info-row\">\n            <span className=\"info-label\">Fecha de nacimiento:</span>\n            <span className=\"info-value\">\n              {person.birthDate ? new Date(person.birthDate).toLocaleDateString() : 'Desconocida'}\n            </span>\n          </div>\n          \n          {person.birthPlace && (\n            <div className=\"info-row\">\n              <span className=\"info-label\">Lugar de nacimiento:</span>\n              <span className=\"info-value\">{person.birthPlace}</span>\n            </div>\n          )}\n          \n          {!person.isAlive && person.deathDate && (\n            <div className=\"info-row\">\n              <span className=\"info-label\">Fecha de fallecimiento:</span>\n              <span className=\"info-value\">\n                {new Date(person.deathDate).toLocaleDateString()}\n              </span>\n            </div>\n          )}\n          \n          {!person.isAlive && person.deathPlace && (\n            <div className=\"info-row\">\n              <span className=\"info-label\">Lugar de fallecimiento:</span>\n              <span className=\"info-value\">{person.deathPlace}</span>\n            </div>\n          )}\n          \n          {person.occupation && (\n            <div className=\"info-row\">\n              <span className=\"info-label\">Ocupación:</span>\n              <span className=\"info-value\">{person.occupation}</span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {person.bio && (\n        <div className=\"person-bio\">\n          <h3>Biografía</h3>\n          <p>{person.bio}</p>\n        </div>\n      )}\n      \n      <div className=\"person-actions\">\n        <button className=\"action-button edit\">Editar</button>\n        <button className=\"action-button photos\">Ver fotos</button>\n        <button className=\"action-button documents\">Ver documentos</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonDetail;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport FamilyTree from '../../components/FamilyTree/FamilyTree';\nimport PersonDetail from '../../components/PersonDetail/PersonDetail';\nimport personService from '../../services/personService';\nimport './TreeView.css';\n\nconst TreeView = () => {\n  const { familyId } = useParams();\n  const [treeData, setTreeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [viewType, setViewType] = useState('horizontal');\n  const [generations, setGenerations] = useState(3);\n  const [includeSpouses, setIncludeSpouses] = useState(true);\n\n  useEffect(() => {\n    const fetchTreeData = async () => {\n      try {\n        setLoading(true);\n        \n        // Intentar cargar datos reales desde la API\n        try {\n          // Obtener el ID de la persona raíz para esta familia\n          // Esto podría requerir una llamada adicional a la API para obtener el fundador de la familia\n          const rootPersonId = '1'; // Esto debería venir de la API\n          \n          const response = await personService.getPersonTree(rootPersonId, {\n            generations,\n            includeSpouses\n          });\n          \n          if (response.success && response.data) {\n            setTreeData(response.data);\n            setLoading(false);\n            return;\n          }\n        } catch (apiError) {\n          console.warn('Error al cargar datos de la API, usando datos de ejemplo:', apiError);\n        }\n        \n        // Si falla la API, usar datos de ejemplo\n        setTimeout(() => {\n          const mockData = {\n            _id: '1',\n            name: 'Juan Pérez',\n            fullName: 'Juan Pérez',\n            birthDate: '1950-05-15',\n            isAlive: true,\n            children: [\n              {\n                _id: '2',\n                name: 'María Pérez',\n                fullName: 'María Pérez',\n                birthDate: '1975-08-20',\n                isAlive: true,\n                children: [\n                  {\n                    _id: '4',\n                    name: 'Carlos Gómez',\n                    fullName: 'Carlos Gómez',\n                    birthDate: '2000-03-10',\n                    isAlive: true\n                  },\n                  {\n                    _id: '5',\n                    name: 'Laura Gómez',\n                    fullName: 'Laura Gómez',\n                    birthDate: '2002-11-05',\n                    isAlive: true\n                  }\n                ]\n              },\n              {\n                _id: '3',\n                name: 'Pedro Pérez',\n                fullName: 'Pedro Pérez',\n                birthDate: '1978-12-03',\n                isAlive: true,\n                children: [\n                  {\n                    _id: '6',\n                    name: 'Ana Pérez',\n                    fullName: 'Ana Pérez',\n                    birthDate: '2005-07-22',\n                    isAlive: true\n                  }\n                ]\n              }\n            ]\n          };\n          setTreeData(mockData);\n          setLoading(false);\n        }, 800);\n      } catch (err) {\n        setError('Error al cargar los datos del árbol genealógico');\n        setLoading(false);\n        console.error('Error fetching tree data:', err);\n      }\n    };\n\n    fetchTreeData();\n  }, [familyId, generations, includeSpouses]);\n\n  const handlePersonClick = (person) => {\n    setSelectedPerson(person);\n  };\n\n  const handleCloseDetail = () => {\n    setSelectedPerson(null);\n  };\n  \n  const handleViewTypeChange = (type) => {\n    setViewType(type);\n  };\n  \n  const handleGenerationsChange = (e) => {\n    setGenerations(parseInt(e.target.value));\n  };\n  \n  const handleIncludeSpousesChange = () => {\n    setIncludeSpouses(!includeSpouses);\n  };\n  \n  const handleExportTree = () => {\n    // Implementar exportación del árbol (GEDCOM, PDF, etc.)\n    alert('Funcionalidad de exportación en desarrollo');\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">Cargando árbol genealógico...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-container\">{error}</div>;\n  }\n\n  return (\n    <div className=\"tree-view-container\">\n      <div className=\"tree-header\">\n        <h1>Árbol Genealógico</h1>\n        <div className=\"tree-options\">\n          <div className=\"view-type-selector\">\n            <button \n              className={`view-type-btn ${viewType === 'horizontal' ? 'active' : ''}`}\n              onClick={() => handleViewTypeChange('horizontal')}\n              title=\"Vista horizontal\"\n            >\n              ↔️\n            </button>\n            <button \n              className={`view-type-btn ${viewType === 'vertical' ? 'active' : ''}`}\n              onClick={() => handleViewTypeChange('vertical')}\n              title=\"Vista vertical\"\n            >\n              ↕️\n            </button>\n          </div>\n          \n          <div className=\"generations-selector\">\n            <label htmlFor=\"generations\">Generaciones:</label>\n            <select \n              id=\"generations\" \n              value={generations} \n              onChange={handleGenerationsChange}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </div>\n          \n          <div className=\"spouses-selector\">\n            <input \n              type=\"checkbox\" \n              id=\"includeSpouses\" \n              checked={includeSpouses} \n              onChange={handleIncludeSpousesChange}\n            />\n            <label htmlFor=\"includeSpouses\">Incluir cónyuges</label>\n          </div>\n        </div>\n        \n        <div className=\"tree-actions\">\n          <button className=\"btn btn-outline\" onClick={handleExportTree}>Exportar árbol</button>\n          <button className=\"btn btn-primary\">Añadir persona</button>\n        </div>\n      </div>\n      \n      <div className=\"tree-visualization\">\n        <FamilyTree \n          data={treeData} \n          onPersonClick={handlePersonClick}\n          viewType={viewType}\n        />\n      </div>\n      \n      {selectedPerson && (\n        <div className=\"person-detail-overlay\">\n          <div className=\"person-detail-container\">\n            <PersonDetail \n              person={selectedPerson} \n              onClose={handleCloseDetail} \n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TreeView;"],"names":["api","axios","create","baseURL","process","headers","interceptors","request","use","async","data","supabase","auth","getSession","session","config","access_token","error","Promise","reject","response","status","signOut","window","location","href","getAllPersons","params","arguments","length","undefined","get","getFamilyPersons","familyId","getPersonById","id","createPerson","post","personData","updatePerson","put","deletePerson","delete","addRelation","relationData","removeRelation","getPersonTree","searchPersons","query","getPersonRelationships","personId","_ref","onPersonClick","viewType","svgRef","useRef","selectedNode","setSelectedNode","useState","useEffect","svg","d3","current","selectAll","remove","width","margin","root","treeLayout","size","g","append","attr","linkGenerator","x","d","y","links","enter","node","descendants","children","on","event","_id","style","text","fullName","name","zoom","scaleExtent","transform","call","initialTransform","translate","height","scale","preventDefault","_jsxs","className","_jsx","title","ref","person","onClose","onClick","profilePhoto","src","alt","birthDate","Date","toLocaleDateString","birthPlace","isAlive","deathDate","deathPlace","occupation","bio","TreeView","useParams","treeData","setTreeData","loading","setLoading","setError","selectedPerson","setSelectedPerson","setViewType","generations","setGenerations","includeSpouses","setIncludeSpouses","rootPersonId","personService","success","apiError","console","warn","setTimeout","err","fetchTreeData","handleViewTypeChange","type","htmlFor","value","onChange","e","parseInt","target","checked","handleIncludeSpousesChange","handleExportTree","alert","FamilyTree","PersonDetail","handleCloseDetail"],"sourceRoot":""}